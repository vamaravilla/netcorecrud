// <auto-generated />
using System;
using JobBoard.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JobBoard.DataAccess.Migrations
{
    [DbContext(typeof(JobBoardMigrationContext))]
    partial class JobBoardMigrationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JobBoard.Entities.JobEntity", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("JobId");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            JobId = 1,
                            CreatedAt = new DateTime(2020, 6, 16, 14, 40, 11, 704, DateTimeKind.Local).AddTicks(4372),
                            Description = ".NET Developer",
                            ExpiresAt = new DateTime(2020, 7, 16, 14, 40, 11, 706, DateTimeKind.Local).AddTicks(3922),
                            Title = ".NET Developer"
                        },
                        new
                        {
                            JobId = 2,
                            CreatedAt = new DateTime(2020, 6, 16, 14, 40, 11, 706, DateTimeKind.Local).AddTicks(4874),
                            Description = "QA Analyst",
                            ExpiresAt = new DateTime(2020, 7, 16, 14, 40, 11, 706, DateTimeKind.Local).AddTicks(4889),
                            Title = "QA Analyst"
                        },
                        new
                        {
                            JobId = 3,
                            CreatedAt = new DateTime(2020, 6, 16, 14, 40, 11, 706, DateTimeKind.Local).AddTicks(4908),
                            Description = "Backend Developer",
                            ExpiresAt = new DateTime(2020, 7, 16, 14, 40, 11, 706, DateTimeKind.Local).AddTicks(4909),
                            Title = "Backend Developer"
                        },
                        new
                        {
                            JobId = 4,
                            CreatedAt = new DateTime(2020, 6, 16, 14, 40, 11, 706, DateTimeKind.Local).AddTicks(4912),
                            Description = "Frontend Developer",
                            ExpiresAt = new DateTime(2020, 7, 16, 14, 40, 11, 706, DateTimeKind.Local).AddTicks(4913),
                            Title = "Frontend Developer"
                        },
                        new
                        {
                            JobId = 5,
                            CreatedAt = new DateTime(2020, 6, 16, 14, 40, 11, 706, DateTimeKind.Local).AddTicks(4915),
                            Description = "DevOps Engineer",
                            ExpiresAt = new DateTime(2020, 7, 16, 14, 40, 11, 706, DateTimeKind.Local).AddTicks(4917),
                            Title = "DevOps Engineer"
                        },
                        new
                        {
                            JobId = 6,
                            CreatedAt = new DateTime(2020, 6, 16, 14, 40, 11, 706, DateTimeKind.Local).AddTicks(4919),
                            Description = "Dev Manager",
                            ExpiresAt = new DateTime(2020, 7, 16, 14, 40, 11, 706, DateTimeKind.Local).AddTicks(4920),
                            Title = "Dev Manager"
                        },
                        new
                        {
                            JobId = 7,
                            CreatedAt = new DateTime(2020, 6, 16, 14, 40, 11, 706, DateTimeKind.Local).AddTicks(4922),
                            Description = "React Developer",
                            ExpiresAt = new DateTime(2020, 7, 16, 14, 40, 11, 706, DateTimeKind.Local).AddTicks(4923),
                            Title = "React Developer"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
